

## ðŸ”¹ 1. Preparar el sistema

Primero aseguramos que el sistema estÃ© actualizado y tenga las dependencias necesarias:

```bash
sudo apt update
sudo apt upgrade -y
sudo apt install -y ca-certificates curl gnupg lsb-release
```

---

## ðŸ”¹ 2. Instalar Docker Engine

Agregamos el repositorio oficial de Docker (mÃ¡s actualizado que el de Ubuntu):

```bash
# Crear directorio para claves GPG
sudo install -m 0755 -d /etc/apt/keyrings

# Descargar y guardar clave de Docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# Dar permisos de lectura
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Agregar el repo oficial de Docker
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
```

Actualizar e instalar Docker:

```bash
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin
```

---

## ðŸ”¹ 3. Instalar Docker Compose (plugin oficial v2)

```bash
sudo apt install -y docker-compose-plugin
```

ðŸ‘‰ Con esto podrÃ¡s usar:

```bash
docker compose version
```

*(Ojo: es `docker compose` con espacio, ya no `docker-compose` con guion)*

---

## ðŸ”¹ 4. Verificar instalaciÃ³n

```bash
docker --version
docker compose version
```

TambiÃ©n prueba:

```bash
sudo docker run hello-world
```

---

## ðŸ”¹ 5. Ejecutar Docker sin `sudo` (opcional pero recomendado)

Agrega tu usuario al grupo `docker`:

```bash
sudo usermod -aG docker $USER
newgrp docker
```

Ahora prueba:

```bash
docker ps
```
